#   在一个文件中有 10G 个整数，乱序排列，要求找出中位数。内存限制为 2G。
#   内存限制为 2G的意思就是：可以使用2G的空间来运行程序，而不考虑这台机器上的其他软件的占用内存）。
#   假设：数据都为32 bit的无符号整数

#   本题的难点：
#   正常来说，我们求中位数，就是将整数排序，求中位数即可，但注意，这个有一个前提条件：要求内存能放得下这个数组，然后才能排序后找到中位数；
#   很明显，2GB内存空间肯定放不下10GB的整数数据，所以内部排序是不可行的，所以要采用外部排序思路。

#   先根据给定的条件，计算一下给定条件下能存放int整数类型的个数；

#   10GB的空间大小推算：
#   10GB = 10240MB = 10485760 KB(千字节) = 10737418240 Byte(字节) = 85899345920 bit(位)
#   一个int整型数据大小 = 4 Byte(字节)
#   那么，10GB的空间内，可以放下 2684354560‬ 个 int类型整数

#   2GB的空间大小推算：
#   2GB = 2048MB = 2097152‬ KB(千字节) = 2147483648‬ Byte(字节) = 17179869184 bit(位)
#   一个int整型数据大小 = 4 Byte(字节)
#   那么，2GB的空间内，可以放下 5368709120‬ 个 int类型整数

#   ⭐⭐本题思路⭐⭐：
#   1、将内存的2GB，划分区域段，每个区域段8 Byte，一共 2147483648 byte / 8 = 268435456‬个区域段
            #这里说明一下为什么统计数据要用64位8byte的，因为很有可能10GB的2684354560全在一个区域段中，那么如果int有符号肯定放不下这个统计数据(有符号32bit整型数据最大)
            #当然，如果是采用无符号的32位int整型，那就够用了，还可以使得区域段更加紧凑，这个其实影响不大。
#   2、假设是32位无符号整数那么范围0~4294967295，共4294967296‬个数字。
#   3、4294967296‬个数字，分别分配到268435456‬个区域段中，每个区域段则要负责16个数字，
#       比如第一区域段负责大小在范围【0~-15】内的整数；
#       第268435456‬个区域段则负责大小在范围内【4294967280~4294967295】的整数；
#   ⭐ 区域段的作用就是记录出现在这个区域段内的整数的次数
#   4、第一遍遍历10GB-2684354560个整数，根据区域段的范围，分别记录从文件中读取出的整数所属的区域段，并且给这个区域段统计数据+1；
#   5、第一次统计结束后，从前向后，找到统计之和正好超过2684354560/2时所属的区间，说明这个中位数就在这个区间；
#   6、然后统计出中位数区间之前的区间的统计和X，并且释放掉所有区间；
#   7、然后把所有中位数区间的值再通过遍历10G文件，找到并加载到内存中，如果比较变态的请况：这个区间加载后还大于2G，那么就从第一步再分，无非是多计算一步；
#   8、然后排序，从排序后的数据中找到第 2684354560/2-X个值，就是中位数；

#   参考资料：https://blog.csdn.net/ccnunlp/article/details/83603552